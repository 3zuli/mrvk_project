<launch>
    <!--https://gist.github.com/bhaskara/2400165-->
    <!--<arg name="high_res_rgb" default="false"/>-->
    <!--<arg name="cloud_input_ns" value="camera/rgb_downsampled"-->
         <!--if="$(arg high_res_rgb)"/>-->
    <arg name="cloud_input_ns" value="kinect2/sd"/> <!--unless="$(arg high_res_rgb)"/>-->

    <!-- Nodelet manager for this pipeline -->
    <node pkg="nodelet" type="nodelet" args="manager"
         name="record_player_manager" output="screen"/>

    <node
        pkg="image_proc"
        type="image_proc"
        name="ip_node1"
        ns="kinect2/sd"
        output="screen"
    />

    <!-- Convert it into a point cloud -->
    <node pkg="nodelet" type="nodelet" name="cloudify"
          args="load depth_image_proc/point_cloud_xyzrgb record_player_manager --no-bond"
          output="screen">
        <remap from="depth_registered/image_rect" to="$(arg cloud_input_ns)/image_depth_rect"/>
        <remap from="depth_registered/points" to="camera/depth_registered/points"/>
        <remap from="rgb/image_rect_color" to="$(arg cloud_input_ns)/image_color_rect"/>
        <remap from="rgb/camera_info" to="$(arg cloud_input_ns)/camera_info"/>
        <remap from="image_raw" to="$(arg cloud_input_ns)/image_color_rect"/>
    </node>

</launch>

        <!--
        /kinect2/sd/camera_info
        /kinect2/sd/image_color_rect
        /kinect2/sd/image_depth
        /kinect2/sd/image_depth/compressed
        /kinect2/sd/image_depth_rect
        /kinect2/sd/image_depth_rect/compressed
        -->
